#!/usr/bin/env perl
# $Id: connect-bt-headset,v 1.4 2015/06/25 20:32:49 friedman Exp $

# Connect my headset using the bloody fucking bluez5 crapware.

package BTExpect ;

use strict;
use Expect;

use parent qw(Expect);

our $cb = quotemeta ("\033[0;92m");
our $ce = quotemeta ("\033[0m");

sub usleep { select (undef, undef, undef, $_[0]) }

sub new
{
  my $type = shift;
  my $self = $type->SUPER::new (@_);

  #$self->debug (3);
  #$self->exp_internal (1);
  $self->raw_pty (1);
  $self->spawn ('bluetoothctl');

  usleep (.01);
  $self->SUPER::send ("\n");

  return $self;
}

sub send
{
  my $self = shift;

  print @_, "\n";
  $self->SUPER::send (@_, "\n");
  exp_continue;
}

package main;

use strict;

sub bt_connect
{
  my $btid = shift;

  my $e = BTExpect->new;
  my $succ;

  $e->expect (10,
              [ qr/\[${cb}NEW$ce\] Controller.*#/s
                => sub { $e->send ("power on") }
              ],
              [ qr/Changing power on succeeded/
                => sub { $e->send ("connect $btid") }
              ],
              [ qr/Connection successful/
                => sub { $e->send ("quit");
                         $succ = 1;
                       }
              ],
              [ qr/Failed to connect/
                => sub { $e->send ("quit");
                         $succ = 0;
                       }
              ],
              [ qr/\[${cb}DEL$ce\] Controller/
                => sub { $e->soft_close; }
              ]);
  return $succ;
}

sub xsystem
{
  print "+ @_\n";
  system (@_);
  exit ($?) unless $? == 0;
}

sub xbt
{
  print "+ @_\n";
  my $out = `@_`;
  print $out;
  exit ($?) unless $? == 0;
  return $out;
}

sub xcat
{
  my $fh;
  open ($fh, $_[0]) || die "$_[0]: $!\n";
  local $/ = undef;
  return <$fh>;
}

sub get_btmac
{
  map { $_ .= "/.btheadset";
        if (-f $_) { $_ = xcat ($_); chomp; return $_; }
      } ($ENV{HOME}, "$ENV{HOME}/etc/misc");
  return;
}

sub main
{
  return $? unless bt_connect ($_[0] || get_btmac);

  # After the new evdev device is added, if the pause button on the headset
  # is pressed it will reset all the custom xkb bindings.  Running this
  # preemptively seems to avoid that, though I'm not sure why.
  xsystem (qw(reset-xkb));

  my $cards = xbt (qw(pactl list short cards));
  my $id = $1 if $cards =~ /^(\d+)\s+bluez_card/m;
  return 0 unless defined $id;
  xsystem (qw(pactl set-card-profile), $id, qw(a2dp_sink));

  my $sinks = xbt (qw(pactl list short sinks));
  $id = $1 if $sinks =~ /^(\d+)\s+bluez_sink/m;
  return 0 unless defined $id;
  xsystem (qw(pactl set-default-sink), $id);

  return $?;
}

main (@ARGV);

# eof
#
